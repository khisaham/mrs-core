<?xml version="1.0" encoding="UTF-8"?>
<!--

    This Source Code Form is subject to the terms of the Mozilla Public License,
    v. 2.0. If a copy of the MPL was not distributed with this file, You can
    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under
    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.

    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS
    graphic logo is a trademark of OpenMRS Inc.

-->

<!-- Application context definition for OpenMRS business services. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee
			http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop
           	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd
			http://www.springframework.org/schema/cache
			http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!--  **************************  Transactional Intercepter  *************************  -->
	<!--  	
		Looks for advisors (TransactionAttributeSourceAdvisor) in the context, and automatically 
		creates proxy objects which are the transactional wrappers.  This object looks at every 
		class defined below to see whether it contains the Transactional annotation attribute. 
		NOTE:  I believe this needs to be defined at the top of the file (or before all Transactional
		components) because it needs to do processing on objects after they are initialized. 
	-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	<!-- 
		AOP advisor: Contains TransactionAttributeSource which tells Spring what to do (advice) 
		and when to do it (pointcut).  Pointcuts, in our case, are defined by the use of the 
		Transactional annotation attribute.
	-->
	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transactionInterceptor"/>
	</bean>
	<!-- 
		AOP transaction advice: Intercepts method call and wraps it with a transaction.  The 
		transactionAttributeSource is what reads/remembers all Transactional attributes of a given 
		method or class (which is done during initialization)
	-->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>

	<bean class="org.mrs.api.impl.GlobalLocaleList" id="globalLocaleList"/>
	
	<!--  **************************  EVENT LISTENERS ***************************** -->

	<!--  Clear out the global property listeners list first -->
	<bean id="clearOpenmrsEventListeners" class="org.mrs.api.EventListeners">
		<property name="globalPropertyListenersToEmpty"><value>false</value></property>
	</bean>
	
	<bean id="openmrsEventListeners" class="org.mrs.api.EventListeners" depends-on="clearOpenmrsEventListeners">
		<property name="globalPropertyListeners">
			<list value-type="org.mrs.api.GlobalPropertyListener">
				<bean class="org.mrs.util.LocaleUtility" />
				<bean class="org.mrs.util.LocationUtility" />
				<bean class="org.mrs.api.impl.PersonNameGlobalPropertyListener" />
				<ref bean="globalLocaleList" />
				<ref bean="adminServiceTarget" />
                <ref bean="orderServiceTarget" />
			</list>
		</property>
	</bean>


	<!--  **************************  SERVICE CONTEXT CONFIGURATION  *************************  -->

	<!-- Single application context (our own context, not Spring's ApplicationContext -->
	<bean id="serviceContext" class="org.mrs.api.context.ServiceContext" factory-method="getInstance" destroy-method="destroyInstance">
        <property name="patientService"><ref bean="patientService"/></property>
        <property name="personService"><ref bean="personService"/></property>
        <property name="conceptService"><ref bean="conceptService"/></property>
        <property name="userService"><ref bean="userService"/></property>
        <property name="obsService"><ref bean="obsService"/></property>
        <property name="encounterService"><ref bean="encounterService"/></property>
        <property name="locationService"><ref bean="locationService"/></property>
        <property name="orderService"><ref bean="orderService"/></property>
		<property name="conditionService"><ref bean="conditionService"/></property>
		<property name="diagnosisService"><ref bean="diagnosisService"/></property>
		<property name="orderSetService"><ref bean="orderSetService"/></property>
        <property name="formService"><ref bean="formService"/></property>
        <property name="administrationService"><ref bean="adminService"/></property>
        <property name="datatypeService"><ref bean="datatypeService"/></property>
        <property name="programWorkflowService"><ref bean="programWorkflowService"/></property>
        <property name="cohortService"><ref bean="cohortService"/></property>
        <property name="messageService"><ref bean="messageService"/></property>
        <property name="serializationService"><ref bean="serializationService"/></property>        
        <property name="schedulerService"><ref bean="schedulerService"/></property>
        <property name="alertService"><ref bean="alertService"/></property>
        <property name="hl7Service"><ref bean="hL7Service"/></property>
        <property name="messageSourceService"><ref bean="messageSourceService"/></property>
        <property name="visitService"><ref bean="visitService"/></property>
        <property name="providerService"><ref bean="providerService"/></property>
	</bean>	
	
  <bean id="context" class="org.mrs.api.context.Context" init-method="setAuthenticationScheme">
    <property name="serviceContext"><ref bean="serviceContext"/></property>
    <property name="contextDAO"><ref bean="contextDAO"/></property>
	</bean>

	<!--  **************************  DATA ACCESS OBJECTS  *************************  -->		

	<bean id="contextDAO" class="org.mrs.api.db.hibernate.HibernateContextDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    <property name="userDAO"><ref bean="userDAO"/></property>
	</bean>
	
	<bean id="patientDAO" class="org.mrs.api.db.hibernate.HibernatePatientDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="personDAO" class="org.mrs.api.db.hibernate.HibernatePersonDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="conceptDAO" class="org.mrs.api.db.hibernate.HibernateConceptDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="userDAO" class="org.mrs.api.db.hibernate.HibernateUserDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="obsDAO" class="org.mrs.api.db.hibernate.HibernateObsDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="encounterDAO" class="org.mrs.api.db.hibernate.HibernateEncounterDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="locationDAO" class="org.mrs.api.db.hibernate.HibernateLocationDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="orderDAO" class="org.mrs.api.db.hibernate.HibernateOrderDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="orderSetDAO" class="org.mrs.api.db.hibernate.HibernateOrderSetDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	<bean id="formDAO" class="org.mrs.api.db.hibernate.HibernateFormDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="adminDAO" class="org.mrs.api.db.hibernate.HibernateAdministrationDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="programWorkflowDAO" class="org.mrs.api.db.hibernate.HibernateProgramWorkflowDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="templateDAO" class="org.mrs.api.db.hibernate.HibernateTemplateDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="cohortDAO" class="org.mrs.api.db.hibernate.HibernateCohortDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="serializedObjectDAO" class="org.mrs.api.db.hibernate.HibernateSerializedObjectDAO" factory-method="getInstance">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
		<property name="supportedTypes">
			<list></list>
		</property>
	</bean>
	<bean id="datatypeDAO" class="org.mrs.api.db.hibernate.HibernateDatatypeDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	<bean id="schedulerDAO" class="org.mrs.scheduler.db.hibernate.HibernateSchedulerDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="alertDAO" class="org.mrs.notification.db.hibernate.HibernateAlertDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="hL7DAO" class="org.mrs.hl7.db.hibernate.HibernateHL7DAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>	
	</bean>
	<bean id="visitDAO" class="org.mrs.api.db.hibernate.HibernateVisitDAO">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
	<bean id="providerDAO" class="org.mrs.api.db.hibernate.HibernateProviderDAO">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
	<bean id="conditionDAO" class="org.mrs.api.db.hibernate.HibernateConditionDAO">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
	<bean id="diagnosisDAO" class="org.mrs.api.db.hibernate.HibernateDiagnosisDAO">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	

	<!--  **************************  SCHEDULER SERVICE  *************************  -->
	<!-- 
		Note that we have circular dependency between service and context object.
		There's nothing we could do about this.  
	-->
	<bean id="patientServiceTarget" class="org.mrs.api.impl.PatientServiceImpl">
		<property name="patientDAO"><ref bean="patientDAO"/></property>	
		<property name="identifierValidators">
			<map>
				<entry>
					<key><value>org.mrs.patient.impl.LuhnIdentifierValidator</value></key>
					<bean class="org.mrs.patient.impl.LuhnIdentifierValidator"/>
				</entry>
				<entry>
					<key><value>org.mrs.patient.impl.VerhoeffIdentifierValidator</value></key>
					<bean class="org.mrs.patient.impl.VerhoeffIdentifierValidator"/>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="personServiceTarget" class="org.mrs.api.impl.PersonServiceImpl">
		<property name="personDAO"><ref bean="personDAO"/></property>	
	</bean>
	<bean id="conceptServiceTarget" class="org.mrs.api.impl.ConceptServiceImpl">
		<property name="conceptDAO"><ref bean="conceptDAO"/></property>	
	</bean>
	<bean id="userServiceTarget" class="org.mrs.api.impl.UserServiceImpl">
		<property name="userDAO"><ref bean="userDAO"/></property>	
	</bean>
	<bean id="obsServiceTarget" class="org.mrs.api.impl.ObsServiceImpl">
		<property name="obsDAO"><ref bean="obsDAO"/></property>	
        <property name="handlers">
            <map>
                <entry>
                    <key><value>ImageHandler</value></key>
                    <bean class="org.mrs.obs.handler.ImageHandler"/>
                </entry>
                <entry>
                    <key><value>TextHandler</value></key>
                    <bean class="org.mrs.obs.handler.TextHandler"/>
                </entry>
                 <entry>
                    <key><value>BinaryDataHandler</value></key>
                    <bean class="org.mrs.obs.handler.BinaryDataHandler"/>
                </entry>
                 <entry>
                    <key><value>BinaryStreamHandler</value></key>
                    <bean class="org.mrs.obs.handler.BinaryStreamHandler"/>
                </entry>
            </map>
        </property>
	</bean>
	<bean id="encounterServiceTarget" class="org.mrs.api.impl.EncounterServiceImpl">
		<property name="encounterDAO"><ref bean="encounterDAO"/></property>	
	</bean>
	<bean id="locationServiceTarget" class="org.mrs.api.impl.LocationServiceImpl">
		<property name="locationDAO"><ref bean="locationDAO"/></property>	
	</bean>
	<bean id="orderServiceTarget" class="org.mrs.api.impl.OrderServiceImpl">
		<property name="orderDAO"><ref bean="orderDAO"/></property>
	</bean>
	<bean id="conditionServiceTarget" class="org.mrs.api.impl.ConditionServiceImpl">
		<property name="conditionDAO"><ref bean="conditionDAO"/></property>
	</bean>
	<bean id="diagnosisServiceTarget" class="org.mrs.api.impl.DiagnosisServiceImpl">
		<property name="diagnosisDAO"><ref bean="diagnosisDAO"/></property>
	</bean>
	<bean id="orderSetServiceTarget" class="org.mrs.api.impl.OrderSetServiceImpl">
		<property name="orderSetDAO"><ref bean="orderSetDAO"/></property>
	</bean>
	<bean id="formServiceTarget" class="org.mrs.api.impl.FormServiceImpl">
		<property name="formDAO"><ref bean="formDAO"/></property>	
	</bean>
	<bean id="adminServiceTarget" class="org.mrs.api.impl.AdministrationServiceImpl">
		<property name="administrationDAO"><ref bean="adminDAO"/></property>	
		<property name="eventListeners"><ref bean="openmrsEventListeners"/></property>
		<property name="globalLocaleList"><ref bean="globalLocaleList"/></property>
		<property name="implementationIdHttpClient"><ref bean="implementationIdHttpClient"/></property>
	</bean>
	<bean id="datatypeServiceTarget" class="org.mrs.api.impl.DatatypeServiceImpl">
		<property name="dao"><ref bean="datatypeDAO"/></property>
	</bean>
	<bean id="programWorkflowServiceTarget" class="org.mrs.api.impl.ProgramWorkflowServiceImpl">
		<property name="programWorkflowDAO"><ref bean="programWorkflowDAO"/></property>	
	</bean>
	<bean id="visitServiceTarget" class="org.mrs.api.impl.VisitServiceImpl">
        <property name="visitDAO"><ref bean="visitDAO"/></property>
	</bean>
	<bean id="providerServiceTarget" class="org.mrs.api.impl.ProviderServiceImpl">
        <property name="providerDAO"><ref bean="providerDAO"/></property>
	</bean>	

	<!-- Cohort Service setup -->
	<bean id="cohortServiceTarget" class="org.mrs.api.impl.CohortServiceImpl">
		<property name="cohortDAO"><ref bean="cohortDAO"/></property>
	</bean>
	<!-- /Cohort Service setup -->
	
	<bean id="schedulerServiceTarget" class="org.mrs.scheduler.timer.TimerSchedulerServiceImpl">
		<property name="schedulerDAO"><ref bean="schedulerDAO"/></property>	
	</bean>
	<bean id="alertServiceTarget" class="org.mrs.notification.impl.AlertServiceImpl">
		<property name="alertDAO"><ref bean="alertDAO"/></property>	
	</bean>
	<bean id="messageServiceTarget" class="org.mrs.notification.impl.MessageServiceImpl">
		<property name="templateDAO"><ref bean="templateDAO"/></property>	
	</bean>

	<!-- SerializationService setup -->
	<bean id="serializationServiceTarget" class="org.mrs.api.impl.SerializationServiceImpl">
		<property name="serializers">
			<list>
                <bean class="org.mrs.serialization.SimpleXStreamSerializer"/>
			</list>
		</property>
	</bean>
	<!-- /SerializationService setup -->
	
	<bean id="hL7ServiceTarget" class="org.mrs.hl7.impl.HL7ServiceImpl" factory-method="getInstance">
		<property name="HL7DAO"><ref bean="hL7DAO"/></property>
		<property name="parser"><bean class="ca.uhn.hl7v2.parser.GenericParser" /></property>
		<property name="router"><bean class="ca.uhn.hl7v2.app.MessageTypeRouter" /></property>
		<property name="HL7Handlers">
			<map>
				<entry key="ORU_R01"><bean class="org.mrs.hl7.handler.ORUR01Handler"/></entry>
				<entry key="ADT_A28"><bean class="org.mrs.hl7.handler.ADTA28Handler"/></entry>
			</map>
		</property>
	</bean>

	
	<bean id="messageSourceServiceTarget" class="org.mrs.messagesource.impl.MessageSourceServiceImpl">
		<property name="activeMessageSource"><ref bean="mutableResourceBundleMessageSource"/>
		</property>
	</bean>
	
	<bean id="transactionAttributeSource" class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		
	<bean id="mutableResourceBundleMessageSource" class="org.mrs.messagesource.impl.MutableResourceBundleMessageSource">
		<property name="basenames">
			<!--  ABKTODO: Ugh. Presumes to be in a web application... -->
			<list>
				<value>classpath:custom_messages</value>
				<value>classpath:messages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage"><value>true</value></property>
		<property name="cacheSeconds" value="5" />
		<property name="defaultEncoding"><value>UTF-8</value></property>
	</bean>
	
	<bean id="patientService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="patientServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="personService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="personServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="conceptService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="conceptServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="userService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="userServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="obsService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="obsServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="encounterService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="encounterServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="locationService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="locationServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="orderService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="orderServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="conditionService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="conditionServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="diagnosisService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="diagnosisServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="orderSetService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="orderSetServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="formService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="formServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="adminService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="adminServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="datatypeService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager"/></property>
        <property name="target"><ref local="datatypeServiceTarget"/></property>
        <property name="preInterceptors">
            <ref local="serviceInterceptors" />
        </property>
        <!-- This service is not transactional, at least not yet, so maybe we can remove this -->
        <property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
    </bean>
	<bean id="programWorkflowService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="programWorkflowServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="messageService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="messageServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="cohortService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="cohortServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="schedulerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="schedulerServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="alertService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="alertServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="serializationService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="serializationServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
		</property>
	</bean>
	<bean id="hL7Service" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="hL7ServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="messageSourceService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="messageSourceServiceTarget"/></property>
		<property name="preInterceptors">
			<ref local="serviceInterceptors" />
		</property>
		<property name="transactionAttributeSource"><ref local="transactionAttributeSource" /></property>
	</bean>
	<bean id="visitService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	    <property name="transactionManager"><ref local="transactionManager"/></property>
	    <property name="target"><ref local="visitServiceTarget"/></property>
	    <property name="preInterceptors">
	        <ref local="serviceInterceptors"/>
	    </property>
	    <property name="transactionAttributeSource"><ref local="transactionAttributeSource"/></property>
    </bean>
	<bean id="providerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	    <property name="transactionManager"><ref local="transactionManager"/></property>
	    <property name="target"><ref local="providerServiceTarget"/></property>
	    <property name="preInterceptors">
	        <ref local="serviceInterceptors"/>
	    </property>
	    <property name="transactionAttributeSource"><ref local="transactionAttributeSource"/></property>
    </bean>
	
	
	

	<!--  **************************  SERVICE INTERCEPTORS  *************************  -->
	<!-- AOP before advice that authorizes users according to annotations -->
	<bean id="authorizationInterceptor" class="org.mrs.aop.AuthorizationAdvice"/>
	<!-- AOP "around" advisor that prints logging messages for service methods -->
	<bean id="loggingInterceptor" class="org.mrs.aop.LoggingAdvice"/>
	<!-- AOP before advice that calls the SetRequiredDataHandler methods -->
	<bean id="requiredDataInterceptor" class="org.mrs.aop.RequiredDataAdvice"/>
	<!-- AOP cache interceptor -->
	<bean id="cacheInterceptor" class="org.springframework.cache.interceptor.CacheInterceptor">
		<property name="cacheManager" ref="apiCacheManager"/>
		<property name="cacheOperationSources" ref="annotationCacheOperationSource"/>
	</bean>

	<!-- finds all cache-related annotations to create available cache operations for CacheInterceptor -->
	<bean id="annotationCacheOperationSource" class="org.springframework.cache.annotation.AnnotationCacheOperationSource"/>

	<util:list id="serviceInterceptors">
		<ref local="authorizationInterceptor"/>
		<ref local="requiredDataInterceptor"/>
		<ref local="loggingInterceptor"/>
		<ref local="cacheInterceptor"/>
	</util:list>
	
	
	<!--  **************************  SESSION FACTORY  *************************  -->
	
	<util:list id="moduleTestingMappingJarLocations">
		
	</util:list>
	
	<bean id="mappingJarResources" class="org.springframework.beans.factory.config.ListFactoryBean" parent="moduleTestingMappingJarLocations">
		<property name="sourceList">
			<list merge="true">
			
			</list>
		</property>
	</bean>
	
	<!-- will be autowired to the HibernateSessionFactoryBean by type -->
	<!-- interceptors are used in order of name, this needs to be one of the first and should be since auditable happens to start with 'a' -->
	<bean id="auditableInterceptor" class="org.mrs.api.db.hibernate.AuditableInterceptor" />
	
	<bean id="sessionFactory" class="org.mrs.api.db.hibernate.HibernateSessionFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:hibernate.cfg.xml</value>
			</list>
		</property>
		<property name="mappingJarLocations">
			<ref bean="mappingJarResources" />
		</property>
        <property name="packagesToScan">
            <list>
                <value>org.mrs</value>
            </list>
            </property>
		<!--  default properties must be set in the hibernate.default.properties -->
	</bean>
	
	<bean id="dbSessionFactory" class="org.mrs.api.db.hibernate.DbSessionFactory">
		<constructor-arg name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--  **************************  TRANSACTION MANAGER CONFIGURATION  *************************  -->

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>


	<!--  ******************************  MESSAGE SERVICES  ****************************** -->
	
	<!-- Messaging Service -->
	<!--
    <bean id="messageService" class="org.mrsification.impl.MessageServiceImpl">
        <property name="daoContext">
        	<ref bean="daoContext"/>
        </property>

        <property name="messagePreparator">
			<bean id="mailMessagePreparator" class="org.mrsification.mail.velocity.VelocityMessagePreparator"/>
		</property>        

        <property name="messageSender">
			<bean id="mailMessageSender" class="org.mrsification.mail.MailMessageSender">
				<property name="mailSession">
					<bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
					    <property name="jndiName"><value>java:comp/env/mail/OpenmrsMailSession</value></property>
					</bean>
				</property>
			</bean> 		
		</property>
    </bean>   
	-->		

	<!--  **************************  VALIDATOR CONFIGURATION  *************************  -->
	<!--  Configuration for all mrs validators                                        -->
	
	<bean id="allergyValidator" class="org.mrs.validator.AllergyValidator" />
	<bean id="personValidator" class="org.mrs.validator.PersonValidator" />
	<bean id="patientValidator" class="org.mrs.validator.PatientValidator" />
	<bean id="locationValidator" class="org.mrs.validator.LocationValidator"/>
	<bean id="personNameValidator" class="org.mrs.validator.PersonNameValidator" />
	<bean id="patientIdentifierValidator" class="org.mrs.validator.PatientIdentifierValidator" />
	<bean id="patientIdentifierTypeValidator" class="org.mrs.validator.PatientIdentifierTypeValidator" />
	<bean id="personAttributeTypeValidator" class="org.mrs.validator.PersonAttributeTypeValidator" />
	<bean id="userValidator" class="org.mrs.validator.UserValidator" />
	<bean id="roleValidator" class="org.mrs.validator.RoleValidator" />
	<bean id="privilegeValidator" class="org.mrs.validator.PrivilegeValidator" />
	<bean id="encounterTypeValidator" class="org.mrs.validator.EncounterTypeValidator" />
	<bean id="conceptClassValidator" class="org.mrs.validator.ConceptClassValidator" />
	<bean id="conceptDatatypeValidator" class="org.mrs.validator.ConceptDatatypeValidator" />
	<bean id="conceptSourceValidator" class="org.mrs.validator.ConceptSourceValidator" />
	<bean id="formEditValidator" class="org.mrs.validator.FormValidator" />
	<bean id="fieldTypeValidator" class="org.mrs.validator.FieldTypeValidator" />
	<bean id="programValidator" class="org.mrs.validator.ProgramValidator" />
	<bean id="stateConversionValidator" class="org.mrs.validator.StateConversionValidator" />
	<bean id="taskValidator" class="org.mrs.validator.SchedulerFormValidator" />
	<bean id="obsValidator" class="org.mrs.validator.ObsValidator" />
	<bean id="orderValidator" class="org.mrs.validator.OrderValidator" />
	<bean id="drugOrderValidator" class="org.mrs.validator.DrugOrderValidator" />
	<bean id="requireNameValidator" class="org.mrs.validator.RequireNameValidator"/>
	<bean id="conceptDrugValidator" class="org.mrs.validator.ConceptDrugValidator"/>
	<bean id="hl7SourceValidator" class="org.mrs.validator.HL7SourceValidator"/>
	<bean id="personAddressValidator" class="org.mrs.validator.PersonAddressValidator"/>
	<bean id="visitTypeValidator" class="org.mrs.validator.VisitTypeValidator" />
	<bean id="visitAttributeTypeValidator" class="org.mrs.validator.VisitAttributeTypeValidator" />
	<bean id="providerAttributeTypeValidator" class="org.mrs.validator.ProviderAttributeTypeValidator" />	
	<bean id="encounterValidator" class="org.mrs.validator.EncounterValidator" />
	<bean id="locationAttributeTypeValidator" class="org.mrs.validator.LocationAttributeTypeValidator" />
	<bean id="providerValidator" class="org.mrs.validator.ProviderValidator" />
	<bean id="patientProgramValidator" class="org.mrs.validator.PatientProgramValidator" />
	<bean id="conceptValidator" class="org.mrs.validator.ConceptValidator" />
	<bean id="personMergeLogValidator" class="org.mrs.validator.PersonMergeLogValidator" />
	<bean id="conceptReferenceTermValidator" class="org.mrs.validator.ConceptReferenceTermValidator" />
	<bean id="conceptMapTypeValidator" class="org.mrs.validator.ConceptMapTypeValidator" />
	<bean id="conceptAttributeTypeValidator" class="org.mrs.validator.ConceptAttributeTypeValidator" />
	<bean id="implementationIdHttpClient" class="org.mrs.util.HttpClient">
        <constructor-arg name="url" value="https://implementation.openmrs.org"/>
    </bean>

	<!--  ************************ END VALIDATOR CONFIGURATION  ************************  -->
	
	<context:component-scan base-package="org.mrs">
		<context:include-filter type="annotation" expression="org.mrs.annotation.Handler"/>
		<context:include-filter type="custom" expression="org.mrs.annotation.OpenmrsProfileIncludeFilter" />
		<context:exclude-filter type="custom" expression="org.mrs.util.TestTypeFilter"/> <!-- Excludes classes with unit test super classes -->
		<context:exclude-filter type="custom" expression="org.mrs.annotation.OpenmrsProfileExcludeFilter" />
	</context:component-scan>

</beans>
